{"version":3,"sources":["components/pages/home/Header.js","components/pages/home/GameTypeWrapper.js","components/pages/home/GameType.js","components/pages/home/Home.js","components/pages/klondike/Klondike.js","logic/shared.js","components/CardHolder.js","components/Card.js","components/pages/one-suite/OneSuite.js","logic/one-suite.js","components/pages/four-suite/FourSuite.js","logic/four-suite.js","components/pages/not-found/NotFound.js","App.js","utils/routes.js","reportWebVitals.js","index.js"],"names":["Header","className","GameTypeWrapper","props","children","GameType","to","type","Home","Klondike","getRank","rank","parseInt","checkMovable","card","deck","ranks","slice","indexOf","map","curCard","curRank","i","length","checkMove","target","game","suit","selectedCard","removeSelection","setgame","highlightedCard","decks","j","isSelected","isHighlighted","prevState","selected","selectedDeck","highlightedDeck","dragStart","event","x","pageX","y","pageY","dataTransfer","setData","id","setDragImage","Image","selectCard","drag","forEach","child","document","getElementById","movex","movey","css","style","cssText","dragEnter","tempDecks","tempCard","deckIdx","cardIdx","moveCards","toDeck","fromDeck","fromCard","tempDeck","from","splice","push","isDown","err","console","log","holder","isHandComplete","drop","len","_","checkDeck","curDeckIdx","curHands","hands","distributeRemCards","pop","CardHolder","useState","highlighted","sethighlighted","useEffect","Card","down","setdown","select","setselect","highlight","sethighlight","cardInfo","OneSuite","cards","setcards","val","shuffledCards","populateOneSuitCards","hasOwnProperty","index","Fragment","onClick","onDragEnter","e","key","draggable","onDragStart","onDrag","onDragEnd","FourSuite","dealtCards","populateFourSuitCards","NotFound","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kkBAMeA,MAJf,WACE,OAAO,qBAAKC,UAAU,SAAf,8B,MCIMC,MAJf,SAAyBC,GACvB,OAAO,qBAAKF,UAAU,kBAAf,SAAkCE,EAAMC,Y,cCUlCC,MAVf,SAAkBF,GAChB,OACE,qBAAKF,UAAU,WAAf,SACE,cAAC,IAAD,CAAMK,GAAIH,EAAMI,KAAhB,SACE,oBAAGN,UAAU,iBAAb,cAAgCE,EAAMI,KAAtC,YCUOC,MAbf,WACE,OACE,sBAAKP,UAAU,OAAf,UACE,cAAC,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,CAAUM,KAAK,cACf,cAAC,EAAD,CAAUA,KAAK,eACf,cAAC,EAAD,CAAUA,KAAK,oBCNRE,MAJf,WACE,OAAO,4C,qCCAIC,EAAU,SAACC,GACtB,GAAa,MAATA,GAAyB,MAATA,GAAyB,MAATA,GAAyB,MAATA,EAYlD,OAAOC,SAASD,GAXhB,OAAQA,GACN,IAAK,IACH,OAAO,GACT,IAAK,IACH,OAAO,GACT,IAAK,IACH,OAAO,GACT,IAAK,IACH,OAAO,IAQFE,EAAe,SAACC,EAAMC,GAOjC,IANA,IAEIC,EAFQ,YAAOD,GACQE,MAAMF,EAAKG,QAAQJ,IACtBK,KAAI,SAACC,GAC3B,OAAOV,EAAQU,EAAQT,SAErBU,EAAUX,EAAQI,EAAKH,MAClBW,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAAK,CACrC,GAAID,EAAUL,EAAMM,IAAM,EAAG,OAAO,EACpCD,EAAUL,EAAMM,GAElB,OAAO,GAKIE,EAAY,SAACC,EAAQV,EAAMW,GACtC,OACED,EAAOE,MAAQD,EAAKE,aAAaD,MACjCjB,EAAQe,EAAOd,MAAQD,EAAQgB,EAAKE,aAAajB,OAAS,GAEtDI,EAAKG,QAAQO,IAAWV,EAAKQ,OAAS,GAQjCM,EAAkB,SAACH,EAAMI,GACpC,GAA0B,KAAtBJ,EAAKE,cAAgD,KAAzBF,EAAKK,gBAAwB,CAE3D,IADA,IAAIC,EAAK,YAAON,EAAKM,OACZV,EAAI,EAAGA,EAAIU,EAAMT,OAAQD,IAChC,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAMV,GAAGC,OAAQU,IACnCD,EAAMV,GAAGW,GAAGC,YAAa,EACzBF,EAAMV,GAAGW,GAAGE,eAAgB,EAGhCL,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENC,SAAU,GACVL,MAAOA,EACPJ,aAAc,GACdU,aAAc,GACdP,gBAAiB,GACjBQ,gBAAiB,UAKVC,EAAY,SAACC,EAAO3B,EAAMC,EAAMW,EAAMI,GACjD,IAAMY,EAAID,EAAME,MACVC,EAAIH,EAAMI,MAChBJ,EAAMK,aAAaC,QAAQ,OAAQN,EAAMhB,OAAOuB,IAChDP,EAAMK,aAAaG,aAAa,IAAIC,MAAM,IAAK,MAAO,IAAK,IAC3DpB,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENM,EAAGA,EACHE,EAAGA,OAELf,EAAgBH,EAAMI,GACtBqB,EAAWrC,EAAMC,EAAM,KAAMW,EAAMI,IAIxBsB,EAAO,SAACX,EAAO3B,EAAMY,EAAMI,GACtCJ,EAAKW,SAASgB,SAAQ,SAACvC,GACrB,IAAIwC,EAAQC,SAASC,eACnB1C,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,MACzCX,SAAS,GACPqD,EAAQhB,EAAME,MAAQjB,EAAKgB,EAC3BgB,EAAQjB,EAAMI,MAAQnB,EAAKkB,EAC/B,GAAmB,GAAfH,EAAME,MACR,IAAIgB,EAAM,+DAENA,EACF,0FACAF,EACA,OACAC,EACA,OAEJJ,EAAMM,MAAMC,QAAUF,MAKbG,EAAY,SAACrB,EAAOf,EAAMI,EAAShB,EAAMC,GACpD,IAAIgD,EAAS,YAAOrC,EAAKM,OACzB,GAAa,KAATlB,GAAqC,KAAtBY,EAAKE,aACtBmC,EAAUV,SAAQ,SAACtC,GAAD,OAChBA,EAAKsC,SAAQ,SAACW,GAAD,OAAeA,EAAS7B,eAAgB,aAElD,GAAa,KAATrB,GAAeA,GAAQY,EAAKE,aAAc,CACnD,IAAIqC,EAAUF,EAAU7C,QAAQH,GAC5BmD,EAAUH,EAAUE,GAAS/C,QAAQJ,GACzCiD,EAAUV,SAAQ,SAACtC,GAAD,OAChBA,EAAKsC,SAAQ,SAACW,GAAD,OAAeA,EAAS7B,eAAgB,QAEvD4B,EAAUE,GAASC,GAAS/B,eAAgB,EAE9CL,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENL,gBAAiBjB,EACjByB,gBAAiBxB,EACjBiB,MAAO+B,QAKEI,EAAY,SAAUC,EAAQC,EAAUC,EAAUxC,EAASJ,GACtE,IAAI6C,EAAQ,YAAO7C,EAAKM,OACpB1B,EAAKiE,EAASrD,QAAQkD,GACtBI,EAAOD,EAASrD,QAAQmD,GACxBH,EAAUK,EAASC,GAAMtD,QAAQoD,GAEpBC,EAASC,GAAMC,OAAOP,GAE5Bb,SAAQ,SAACvC,GAClByD,EAASjE,GAAIoE,KAAK5D,MAEpB,IAC0D,GAApDyD,EAASC,GAAMD,EAASC,GAAMjD,OAAS,GAAGoD,SAC5CJ,EAASC,GAAMD,EAASC,GAAMjD,OAAS,GAAGoD,QAAS,GAErD,MAAOC,GACPC,QAAQC,IAAIF,GAEd9C,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENJ,MAAOuC,QAMEpB,EAAa,SAACrC,EAAMC,EAAMgE,EAAQrD,EAAMI,GAE/CiD,GAAgC,KAAtBrD,EAAKE,cACc,MAA3BF,EAAKE,aAAajB,OACpBwD,EAAUpD,EAAMW,EAAKY,aAAcZ,EAAKE,aAAcE,EAASJ,GAC/DsD,EAAejE,EAAMW,EAAMI,GAC3BD,EAAgBH,EAAMI,IAG1B,IAAIkC,EAAWlD,EAEf,GAAyB,IAArBY,EAAKE,aAAoB,CAC3B,GAAImD,EAAQ,OACZ,GAAIjE,EAAK6D,OACP,OAGF,GAAI9D,EAAaC,EAAMC,GAAO,CAC5BiD,EAAS9B,YAAa,EACtB,IACIG,EADQ,YAAOtB,GACKE,MAAMF,EAAKG,QAAQJ,IAC3CuB,EAASgB,SAAQ,SAACjC,GAChBA,EAAQc,YAAa,KAEvBJ,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENC,SAAUA,EACVT,aAAcd,EACdwB,aAAcvB,aAKlB8D,QAAQC,IAAI,UACRtD,EAAUwC,EAAUjD,EAAMW,IAC5BmD,QAAQC,IAAI,OAAQpD,GACpByC,EAAUpD,EAAMW,EAAKY,aAAcZ,EAAKE,aAAcE,EAASJ,GAC/DsD,EAAejE,EAAMW,EAAMI,GAC3BD,EAAgBH,EAAMI,IAEtBD,EAAgBH,EAAMI,IAMfmD,EAAO,SAACxC,EAAO3B,EAAMY,EAAMI,GAoBtC,GAlB4B,IAAxBJ,EAAKK,iBACU,KAAbjB,EAAKH,OACHE,EAAaa,EAAKE,aAAcF,EAAKY,eACvC6B,EACEzC,EAAKa,gBACLb,EAAKY,aACLZ,EAAKE,aACLE,EACAJ,GAEFsD,EAAetD,EAAKa,gBAAiBb,EAAMI,GAC3CD,EAAgBH,EAAMI,IAEtBD,EAAgBH,EAAMI,IAKxBN,EAAUE,EAAKK,gBAAiBL,EAAKa,gBAAiBb,GAAO,CAC/D,GAAIb,EAAaa,EAAKE,aAAcF,EAAKY,cAiBvC,OAhBAZ,EAAKW,SAASgB,SAAQ,SAACvC,GACTyC,SAASC,eACnB1C,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,MACzCX,SAAS,GAELwD,MAAMC,QADF,iDAGZM,EACEzC,EAAKa,gBACLb,EAAKY,aACLZ,EAAKE,aACLE,EACAJ,GAEFsD,EAAetD,EAAKa,gBAAiBb,EAAMI,QAC3CD,EAAgBH,EAAMI,GAGtBJ,EAAKW,SAASgB,SAAQ,SAACvC,GACTyC,SAASC,eACnB1C,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,MACzCX,SAAS,GAELwD,MAAMC,QADF,oCAGZhC,EAAgBH,EAAMI,QAGxBJ,EAAKW,SAASgB,SAAQ,SAACvC,GACTyC,SAASC,eACnB1C,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,MACzCX,SAAS,GAELwD,MAAMC,QADF,oCAGZhC,EAAgBH,EAAMI,IAiBbkD,EAAiB,SAACjE,EAAMW,EAAMI,GACzC,IAAIoD,EAbmB,SAACnE,GACxB,IAAIC,EAAQD,EAAKI,KAAI,SAACL,GACpB,OAAOJ,EAAQI,EAAKH,SAGtB,QAAIwE,UADkB,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClCnE,EAAMC,OAAO,MACjCD,EAAMO,OAAS,GAOd6D,CAAUrE,GACpB,IAAY,IAARmE,EAAe,CACjB,IAAInB,EAAS,YAAOrC,EAAKM,OACrBqD,EAAatB,EAAU7C,QAAQH,GACnC8D,QAAQC,IAAIO,GACZtB,EAAUsB,GAAYZ,OAAOS,GAC7B,IAAII,EAAW5D,EAAK6D,MACgB,GAAhCxB,EAAUsB,GAAY9D,SACxBwC,EAAUsB,GAAYtB,EAAUsB,GAAY9D,OAAS,GAAGoD,QAAS,GAEnE7C,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENJ,MAAO+B,EACPwB,MAAOD,EAAW,OAGhBA,EAAW,IAAM,GAAGT,QAAQC,IAAI,2BAK3BU,EAAqB,SAAC9D,EAAMI,GACvC,GAA8B,IAA1BJ,EAAKM,MAAM,IAAIT,OAAc,CAC/B,IAAIwC,EAAS,YAAOrC,EAAKM,OACzB+B,EAAUV,SAAQ,SAACkB,GACjB,GAAIR,EAAU,IAAIxC,OAAS,EAAG,CAC5B,IAAIyC,EAAWD,EAAU,IAAI0B,MAC7BzB,EAASW,QAAS,EAClBJ,EAASG,KAAKV,OAGlBlC,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENJ,MAAO+B,OAETA,EAAUV,SAAQ,SAACkB,GACjBS,EAAeT,EAAU7C,EAAMI,Q,MC1StB4D,MAZf,YAAwC,IAAlBvD,EAAiB,EAAjBA,cAAiB,EACCwD,mBAAS,IADV,mBAC9BC,EAD8B,KACjBC,EADiB,KASrC,OAPAC,qBAAU,WAEND,EADE1D,EACa,yBAEA,MAEhB,CAACA,IACG,qBAAKlC,UAAW,aAAe2F,K,MC2BzBG,MAnCf,YAA4D,IAA5CjF,EAA2C,EAA3CA,KAAMoB,EAAqC,EAArCA,WAAYyC,EAAyB,EAAzBA,OAAQxC,EAAiB,EAAjBA,cAAiB,EACjCwD,mBAAS,IADwB,mBAClDK,EADkD,KAC5CC,EAD4C,OAE7BN,mBAAS,IAFoB,mBAElDO,EAFkD,KAE1CC,EAF0C,OAGvBR,mBAAS,IAHc,mBAGlDS,EAHkD,KAGvCC,EAHuC,KAqBzD,OAjBAP,qBAAU,WAENG,EADEtB,EACM,cAEA,IAAM7D,EAAKa,MAGnBwE,EADEjE,EACQ,kBAEA,IAGVmE,EADElE,EACW,qBAEA,MAEd,CAACwC,EAAQzC,EAAYC,IAEtB,sBAAKlC,UAAW,OAAS+F,EAAOE,EAASE,EAAzC,UACE,qBAAKnG,UAAU,gCAAf,SAAgDa,EAAKH,OACrD,qBAAKV,UAAU,iCAAf,SACGqG,EAAQ,OAAWxF,EAAKa,QAE3B,qBAAK1B,UAAU,kCAAf,SACGqG,EAAQ,OAAWxF,EAAKa,QAE3B,qBAAK1B,UAAU,iCAAf,SAAiDa,EAAKH,W,MC4E7C4F,MAhGf,WAAqB,IAAD,EACQZ,mBAAS,IADjB,mBACXa,EADW,KACJC,EADI,OAEMd,mBAAS,CAC/Ba,MAAO,GACPxE,MAAO,GACPJ,aAAc,GACdU,aAAc,GACdD,SAAU,GACVkD,MAAO,EACP7C,GAAI,EACJE,GAAI,EACJL,gBAAiB,GACjBR,gBAAiB,KAZD,mBAEXL,EAFW,KAELI,EAFK,KAwBlB,OAVAgE,qBAAU,WACR,IAAMY,EC1B0B,WAClC,IACE1E,EADEwE,EAAQ,GAEZF,EAAQ,KAASjD,SAAQ,SAAC1C,GACxB,IAAK,IAAIW,EAAI,EAAGA,GAAK,EAAGA,IACtBkF,EAAM9B,KAAK,CACT/D,KAAMA,EACNgB,KAAM,QACNgD,QAAQ,EACR5D,KAAMO,EACNY,YAAY,EACZC,eAAe,OAIrB,IAAIwE,EAAgBxB,UAAUqB,IAC9BxE,EAAQmD,QAAQwB,EAAc1F,MAAM,EAAG,IAAK,IACtC,IAAM0F,EAAc1F,MAAM,IAChC,IAAK,IAAIK,EAAI,EAAGA,GAAK,EAAGA,IACtBU,EAAMV,GAAGU,EAAMV,GAAGC,OAAS,GAAGoD,QAAS,EAEzC,MAAO,CACL3C,MAAOA,EACPwE,MAAOG,GDGKC,GACZH,EAASC,GACT5E,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENoE,MAAOE,EAAIF,MACXxE,MAAO0E,EAAI1E,aAEZ,IAGD,sBAAK/B,UAAU,WAAf,UACGuG,EAAMK,eAAe,UACpBnF,EAAKM,MAAMf,MAAM,EAAG,IAAIE,KAAI,SAACJ,EAAM+F,GAAP,OAC1B,cAAC,IAAMC,SAAP,UACkB,GAAfhG,EAAKQ,OACJ,qBACEyB,GAAG,SAEHgE,QAAS,WACP7D,EAAW,GAAIpC,GAAM,EAAMW,EAAMI,IAEnCmF,YAAa,SAACC,GACZpD,EAAUoD,EAAGxF,EAAMI,EAAS,GAAIf,IAPpC,SAUE,cAAC,EAAD,CAA+BA,KAAMA,GAApB+F,EAAQ,OARpBA,EAAQ,KAWf,8BACE,qBAAwB/F,KAAMA,EAA9B,SACGA,EAAKI,KAAI,SAACL,EAAMqG,GAAP,OACR,qBACEnE,GAAIlC,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,KAC7Cd,UAAU,4BACVmH,WAAW,EACXC,YAAa,SAACH,GACZrC,QAAQC,IAAI,QACZtC,EAAU0E,EAAGpG,EAAMC,EAAMW,EAAMI,IAEjCwF,OAAQ,SAACJ,GACP9D,EAAK8D,EAAGpG,EAAMY,IAEhBuF,YAAa,SAACC,GACO,GAAfpG,EAAK6D,QACPb,EAAUoD,EAAGxF,EAAMI,EAAShB,EAAMC,IAGtCwG,UAAW,SAACL,GACVjC,EAAKiC,EAAGpG,EAAMY,EAAMI,IAEtBkF,QAAS,SAACE,GACRrC,QAAQC,IAAI,UACZ3B,EAAWrC,EAAMC,EAAM,KAAMW,EAAMI,IArBvC,SAwBE,cAAC,EAAD,CAEEhB,KAAMA,EACNoB,WAAYpB,EAAKoB,WACjByC,OAAQ7D,EAAK6D,OACbxC,cAAerB,EAAKqB,eAJfrB,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,YA3B5C+F,EAAQ,aAwC3BN,EAAMK,eAAe,UAAYnF,EAAKM,MAAM,IAAIT,OAAS,GACxD,qBACEyF,QAAS,SAACE,GACR1B,EAAmB9D,EAAMI,IAE3B7B,UAAU,uC,MECLuH,MA5Ff,WAAsB,IAAD,EACO7B,mBAAS,IADhB,mBACZa,EADY,KACLC,EADK,OAEKd,mBAAS,CAC/Ba,MAAO,GACPxE,MAAO,GACPJ,aAAc,GACdU,aAAc,GACdD,SAAU,GACVkD,MAAO,EACP7C,GAAI,EACJE,GAAI,EACJL,gBAAiB,GACjBR,gBAAiB,GACjB0F,WAAY,KAbK,mBAEZ/F,EAFY,KAENI,EAFM,KAyBnB,OAVAgE,qBAAU,WACR,IAAMY,ECzB2B,WACnC,IACE1E,EADEwE,EAAQ,GAEZF,EAAQ,KAASjD,SAAQ,SAAC1C,GACxB2F,EAAQ,KAASjD,SAAQ,SAAC1B,GACxB,IAAK,IAAIL,EAAI,EAAGA,GAAK,EAAGA,IACtBkF,EAAM9B,KAAK,CAAE/D,KAAMA,EAAMgB,KAAMA,EAAMgD,QAAQ,EAAM5D,KAAMO,UAK/D,IAAIqF,EAAgBxB,UAAUqB,IAC9BxE,EAAQmD,QAAQwB,EAAc1F,MAAM,EAAG,IAAK,IACtC,IAAM0F,EAAc1F,MAAM,IAChC,IAAK,IAAIK,EAAI,EAAGA,GAAK,EAAGA,IACtBU,EAAMV,GAAGU,EAAMV,GAAGC,OAAS,GAAGoD,QAAS,EAEzC,MAAO,CACL6B,MAAOA,EACPxE,MAAOA,GDMK0F,GACZjB,EAASC,GACT5E,GAAQ,SAACM,GAAD,mBAAC,eACJA,GADG,IAENoE,MAAOE,EAAIF,MACXxE,MAAO0E,EAAI1E,aAEZ,IAGD,sBAAK/B,UAAU,YAAf,UACGuG,EAAMK,eAAe,UACpBnF,EAAKM,MAAMf,MAAM,EAAG,IAAIE,KAAI,SAACJ,EAAM+F,GAAP,OAC1B,cAAC,IAAMC,SAAP,UACkB,GAAfhG,EAAKQ,OACJ,qBACEyB,GAAG,SAEHgE,QAAS,WACP7D,EAAW,GAAIpC,GAAM,EAAMW,EAAMI,IAEnCmF,YAAa,SAACC,GACZpD,EAAUoD,EAAGxF,EAAMI,EAAS,GAAIf,IAPpC,SAUE,cAAC,EAAD,CAA+BA,KAAMA,GAApB+F,EAAQ,OARpBA,EAAQ,KAWf,8BACE,qBAAwB/F,KAAMA,EAA9B,SACGA,EAAKI,KAAI,SAACL,EAAMqG,GAAP,OACR,qBACEnE,GAAIlC,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,KAC7Cd,UAAU,4BACVmH,WAAW,EACXC,YAAa,SAACH,GACZ1E,EAAU0E,EAAGpG,EAAMC,EAAMW,EAAMI,IAEjCwF,OAAQ,SAACJ,GACP9D,EAAK8D,EAAGpG,EAAMY,IAEhBuF,YAAa,SAACC,GACO,GAAfpG,EAAK6D,QACPb,EAAUoD,EAAGxF,EAAMI,EAAShB,EAAMC,IAGtCwG,UAAW,SAACL,GACVjC,EAAKiC,EAAGpG,EAAMY,EAAMI,IAhBxB,SAmBE,cAAC,EAAD,CAEEhB,KAAMA,EACNoB,WAAYpB,EAAKoB,WACjByC,OAAQ7D,EAAK6D,OACbxC,cAAerB,EAAKqB,eAJfrB,EAAKH,KAAO,IAAMG,EAAKa,KAAO,IAAMb,EAAKC,YAtB5C+F,EAAQ,aAmC3BN,EAAMK,eAAe,UAAYnF,EAAKM,MAAM,IAAIT,OAAS,GACxD,qBACEyF,QAAS,SAACE,GACR1B,EAAmB9D,EAAMI,IAE3B7B,UAAU,uCE5FL0H,MAJf,WACE,OAAO,oE,OCyBMC,MAhBf,WACE,OACE,qBAAK3H,UAAU,MAAf,SACE,cAAC,IAAD,CAAQ4H,SAAUC,mBAAlB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAMC,OAAK,EAACC,KCjBF,MDkBV,cAAC,EAAD,CAAUA,KCfI,cDgBd,cAAC,EAAD,CAAUA,KClBI,eDmBd,cAAC,EAAD,CAAWA,KClBI,gBDmBf,cAAC,EAAD,CAAUA,KAAK,cETVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrF,SAASC,eAAe,SAM1ByE,M","file":"static/js/main.ed503c1d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return <div className=\"header\">React Solitaire</div>;\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./GameTypeWrapper.css\";\n\nfunction GameTypeWrapper(props) {\n  return <div className=\"gametypewrapper\">{props.children}</div>;\n}\n\nexport default GameTypeWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./GameType.css\";\n\nfunction GameType(props) {\n  return (\n    <div className=\"gametype\">\n      <Link to={props.type}>\n        <p className=\"gametype__link\"> {props.type} </p>\n      </Link>\n    </div>\n  );\n}\n\nexport default GameType;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport GameTypeWrapper from \"./GameTypeWrapper\";\nimport GameType from \"./GameType\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <Header />\n      <GameTypeWrapper>\n        <GameType type=\"one-suite\" />\n        <GameType type=\"four-suite\" />\n        <GameType type=\"klondike\" />\n      </GameTypeWrapper>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction Klondike() {\n  return <div>Klondike</div>;\n}\n\nexport default Klondike;\n","import * as _ from \"lodash\";\n\n// Function to return rank\nexport const getRank = (rank) => {\n  if (rank === \"K\" || rank === \"Q\" || rank === \"J\" || rank === \"A\") {\n    switch (rank) {\n      case \"K\":\n        return 13;\n      case \"Q\":\n        return 12;\n      case \"J\":\n        return 11;\n      case \"A\":\n        return 1;\n    }\n  } else {\n    return parseInt(rank);\n  }\n};\n\n// Function to check whether given card/cards can be selected to move or not\nexport const checkMovable = (card, deck) => {\n  var tempDeck = [...deck];\n  var movingCards = tempDeck.slice(deck.indexOf(card));\n  var ranks = movingCards.map((curCard) => {\n    return getRank(curCard.rank);\n  });\n  var curRank = getRank(card.rank);\n  for (let i = 1; i < ranks.length; i++) {\n    if (curRank - ranks[i] != 1) return false;\n    curRank = ranks[i];\n  }\n  return true;\n};\n\n// Function to check whether current move to drop currently selected card to\n// a target is valid or not\nexport const checkMove = (target, deck, game) => {\n  if (\n    target.suit == game.selectedCard.suit &&\n    getRank(target.rank) - getRank(game.selectedCard.rank) == 1\n  ) {\n    if (deck.indexOf(target) == deck.length - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Function to delete currently selected card from selected state\nexport const removeSelection = (game, setgame) => {\n  if (game.selectedCard !== \"\" || game.highlightedCard !== \"\") {\n    var decks = [...game.decks];\n    for (let i = 0; i < decks.length; i++) {\n      for (let j = 0; j < decks[i].length; j++) {\n        decks[i][j].isSelected = false;\n        decks[i][j].isHighlighted = false;\n      }\n    }\n    setgame((prevState) => ({\n      ...prevState,\n      selected: [],\n      decks: decks,\n      selectedCard: \"\",\n      selectedDeck: \"\",\n      highlightedCard: \"\",\n      highlightedDeck: \"\",\n    }));\n  }\n};\n\nexport const dragStart = (event, card, deck, game, setgame) => {\n  const x = event.pageX;\n  const y = event.pageY;\n  event.dataTransfer.setData(\"text\", event.target.id);\n  event.dataTransfer.setDragImage(new Image(\"0\", \"0\"), -10, -10);\n  setgame((prevState) => ({\n    ...prevState,\n    x: x,\n    y: y,\n  }));\n  removeSelection(game, setgame);\n  selectCard(card, deck, null, game, setgame);\n};\n\n// Function to add css animation to show movement of selected card and decks\nexport const drag = (event, card, game, setgame) => {\n  game.selected.forEach((card) => {\n    var child = document.getElementById(\n      card.rank + \" \" + card.suit + \" \" + card.deck\n    ).children[0];\n    var movex = event.pageX - game.x;\n    var movey = event.pageY - game.y;\n    if (event.pageX == 0) {\n      var css = \"z-index:9999;transform:translate(0px,0px);display:none;\";\n    } else {\n      var css =\n        \"z-index:9999;pointer-events: none; transform: scale(1.05, 1.05) rotate(0deg) translate(\" +\n        movex +\n        \"px, \" +\n        movey +\n        \"px);\";\n    }\n    child.style.cssText = css;\n  });\n};\n\n// Set Highlighted cards ( Cards which will be potential drop targets based on user movements)\nexport const dragEnter = (event, game, setgame, card, deck) => {\n  var tempDecks = [...game.decks];\n  if (card === \"\" && game.selectedCard !== \"\") {\n    tempDecks.forEach((deck) =>\n      deck.forEach((tempCard) => (tempCard.isHighlighted = false))\n    );\n  } else if (card !== \"\" && card != game.selectedCard) {\n    var deckIdx = tempDecks.indexOf(deck);\n    var cardIdx = tempDecks[deckIdx].indexOf(card);\n    tempDecks.forEach((deck) =>\n      deck.forEach((tempCard) => (tempCard.isHighlighted = false))\n    );\n    tempDecks[deckIdx][cardIdx].isHighlighted = true;\n  }\n  setgame((prevState) => ({\n    ...prevState,\n    highlightedCard: card,\n    highlightedDeck: deck,\n    decks: tempDecks,\n  }));\n};\n\n// Function to transfer cards from one deck to another\nexport const moveCards = function (toDeck, fromDeck, fromCard, setgame, game) {\n  var tempDeck = [...game.decks];\n  var to = tempDeck.indexOf(toDeck);\n  var from = tempDeck.indexOf(fromDeck);\n  var cardIdx = tempDeck[from].indexOf(fromCard);\n\n  var movedCards = tempDeck[from].splice(cardIdx);\n\n  movedCards.forEach((card) => {\n    tempDeck[to].push(card);\n  });\n  try {\n    if (tempDeck[from][tempDeck[from].length - 1].isDown == true) {\n      tempDeck[from][tempDeck[from].length - 1].isDown = false;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  setgame((prevState) => ({\n    ...prevState,\n    decks: tempDeck,\n  }));\n};\n\n// Function to mantain Selection of cards\n// ( Also handles cases of select and drop in case of click events )\nexport const selectCard = (card, deck, holder, game, setgame) => {\n  // Handle drop of card on CardHolder(Blank) by click functionality\n  if (holder && game.selectedCard !== \"\") {\n    if (game.selectedCard.rank === \"K\") {\n      moveCards(deck, game.selectedDeck, game.selectedCard, setgame, game);\n      isHandComplete(deck, game, setgame);\n      removeSelection(game, setgame);\n    }\n  }\n  var tempCard = card;\n  // Handling select card by on click and drag and drop\n  if (game.selectedCard == \"\") {\n    if (holder) return;\n    if (card.isDown) {\n      return;\n    }\n\n    if (checkMovable(card, deck)) {\n      tempCard.isSelected = true;\n      var tempDeck = [...deck];\n      var selected = tempDeck.slice(deck.indexOf(card));\n      selected.forEach((curCard) => {\n        curCard.isSelected = true;\n      });\n      setgame((prevState) => ({\n        ...prevState,\n        selected: selected,\n        selectedCard: card,\n        selectedDeck: deck,\n      }));\n    }\n  } else {\n    // Handling moving of cards by click functionality\n    console.log(\"ppart2\");\n    if (checkMove(tempCard, deck, game)) {\n      console.log(\"game\", game);\n      moveCards(deck, game.selectedDeck, game.selectedCard, setgame, game);\n      isHandComplete(deck, game, setgame);\n      removeSelection(game, setgame);\n    } else {\n      removeSelection(game, setgame);\n    }\n  }\n};\n\n// Function to handle when selected cards are dropped on some other cards\nexport const drop = (event, card, game, setgame) => {\n  // Case when deck is empty ( Drop event occurs on CardHolder )\n  if (game.highlightedCard == \"\") {\n    if (card.rank == \"K\") {\n      if (checkMovable(game.selectedCard, game.selectedDeck)) {\n        moveCards(\n          game.highlightedDeck,\n          game.selectedDeck,\n          game.selectedCard,\n          setgame,\n          game\n        );\n        isHandComplete(game.highlightedDeck, game, setgame);\n        removeSelection(game, setgame);\n      } else {\n        removeSelection(game, setgame);\n      }\n    }\n  }\n  // Drop on cards Case\n  if (checkMove(game.highlightedCard, game.highlightedDeck, game)) {\n    if (checkMovable(game.selectedCard, game.selectedDeck)) {\n      game.selected.forEach((card) => {\n        var child = document.getElementById(\n          card.rank + \" \" + card.suit + \" \" + card.deck\n        ).children[0];\n        var css = \"z-index:0;pointer-events:auto;display:none;\";\n        child.style.cssText = css;\n      });\n      moveCards(\n        game.highlightedDeck,\n        game.selectedDeck,\n        game.selectedCard,\n        setgame,\n        game\n      );\n      isHandComplete(game.highlightedDeck, game, setgame);\n      removeSelection(game, setgame);\n      return;\n    } else {\n      game.selected.forEach((card) => {\n        var child = document.getElementById(\n          card.rank + \" \" + card.suit + \" \" + card.deck\n        ).children[0];\n        var css = \"z-index:0;pointer-events:auto;\";\n        child.style.cssText = css;\n      });\n      removeSelection(game, setgame);\n    }\n  } else {\n    game.selected.forEach((card) => {\n      var child = document.getElementById(\n        card.rank + \" \" + card.suit + \" \" + card.deck\n      ).children[0];\n      var css = \"z-index:0;pointer-events:auto;\";\n      child.style.cssText = css;\n    });\n    removeSelection(game, setgame);\n  }\n};\n\n// Util function to check K Q J 10 .... 3 2 A Set is formed or not\nexport const checkDeck = (deck) => {\n  var ranks = deck.map((card) => {\n    return getRank(card.rank);\n  });\n  const expectedArray = [13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];\n  if (_.isEqual(expectedArray, ranks.slice(-13))) {\n    return ranks.length - 13;\n  }\n  return false;\n};\n\n// Function to check K Q J 10 .... 3 2 A Set is formed or not\nexport const isHandComplete = (deck, game, setgame) => {\n  var len = checkDeck(deck);\n  if (len !== false) {\n    var tempDecks = [...game.decks];\n    var curDeckIdx = tempDecks.indexOf(deck);\n    console.log(curDeckIdx);\n    tempDecks[curDeckIdx].splice(len);\n    var curHands = game.hands;\n    if (tempDecks[curDeckIdx].length != 0) {\n      tempDecks[curDeckIdx][tempDecks[curDeckIdx].length - 1].isDown = false;\n    }\n    setgame((prevState) => ({\n      ...prevState,\n      decks: tempDecks,\n      hands: curHands + 1,\n    }));\n    // Game over case\n    if (curHands + 1 === 8) console.log(\"khatam , bye bye tata\");\n  }\n};\n\n// Add remaining cards to decks\nexport const distributeRemCards = (game, setgame) => {\n  if (game.decks[10].length !== 0) {\n    var tempDecks = [...game.decks];\n    tempDecks.forEach((tempDeck) => {\n      if (tempDecks[10].length > 0) {\n        var tempCard = tempDecks[10].pop();\n        tempCard.isDown = false;\n        tempDeck.push(tempCard);\n      }\n    });\n    setgame((prevState) => ({\n      ...prevState,\n      decks: tempDecks,\n    }));\n    tempDecks.forEach((tempDeck) => {\n      isHandComplete(tempDeck, game, setgame);\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./CardHolder.css\";\n\nfunction CardHolder({ isHighlighted }) {\n  const [highlighted, sethighlighted] = useState(\"\");\n  useEffect(() => {\n    if (isHighlighted) {\n      sethighlighted(\" cardholder__highlight\");\n    } else {\n      sethighlighted(\"\");\n    }\n  }, [isHighlighted]);\n  return <div className={\"cardholder\" + highlighted}></div>;\n}\n\nexport default CardHolder;\n","import React, { useState, useEffect } from \"react\";\nimport cardInfo from \"../utils/cardInfo\";\n\nimport \"./Card.css\";\n\nfunction Card({ card, isSelected, isDown, isHighlighted }) {\n  const [down, setdown] = useState(\"\");\n  const [select, setselect] = useState(\"\");\n  const [highlight, sethighlight] = useState(\"\");\n  useEffect(() => {\n    if (isDown) {\n      setdown(\" card__down\");\n    } else {\n      setdown(\" \" + card.suit);\n    }\n    if (isSelected) {\n      setselect(\" card__selected\");\n    } else {\n      setselect(\"\");\n    }\n    if (isHighlighted) {\n      sethighlight(\" card__highlighted\");\n    } else {\n      sethighlight(\"\");\n    }\n  }, [isDown, isSelected, isHighlighted]);\n  return (\n    <div className={\"card\" + down + select + highlight}>\n      <div className=\"card__content card__rank-left\">{card.rank}</div>\n      <div className=\"card__content card__suite-left\">\n        {cardInfo[\"symbol\"][card.suit]}\n      </div>\n      <div className=\"card__content card__suite-right\">\n        {cardInfo[\"symbol\"][card.suit]}\n      </div>\n      <div className=\"card__content card__rank-right\">{card.rank}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useEffect, useState } from \"react\";\nimport { populateOneSuitCards } from \"../../../logic/one-suite\";\nimport {\n  dragStart,\n  drag,\n  dragEnter,\n  selectCard,\n  drop,\n  distributeRemCards,\n} from \"../../../logic/shared\";\nimport CardHolder from \"../../CardHolder\";\nimport Card from \"../../Card\";\n\nimport \"./OneSuite.css\";\n\nfunction OneSuite() {\n  const [cards, setcards] = useState({});\n  const [game, setgame] = useState({\n    cards: [],\n    decks: [],\n    selectedCard: \"\",\n    selectedDeck: \"\",\n    selected: [],\n    hands: 0,\n    x: -1,\n    y: -1,\n    highlightedDeck: \"\",\n    highlightedCard: \"\",\n  });\n  useEffect(() => {\n    const val = populateOneSuitCards();\n    setcards(val);\n    setgame((prevState) => ({\n      ...prevState,\n      cards: val.cards,\n      decks: val.decks,\n    }));\n  }, []);\n\n  return (\n    <div className=\"onesuite\">\n      {cards.hasOwnProperty(\"decks\") &&\n        game.decks.slice(0, 10).map((deck, index) => (\n          <React.Fragment>\n            {deck.length == 0 ? (\n              <div\n                id=\"holder\"\n                key={index + \"0\"}\n                onClick={() => {\n                  selectCard(\"\", deck, true, game, setgame);\n                }}\n                onDragEnter={(e) => {\n                  dragEnter(e, game, setgame, \"\", deck);\n                }}\n              >\n                <CardHolder key={index + \" 1\"} deck={deck} />\n              </div>\n            ) : (\n              <div>\n                <div key={index + \" 2\"} deck={deck}>\n                  {deck.map((card, key) => (\n                    <div\n                      id={card.rank + \" \" + card.suit + \" \" + card.deck}\n                      className=\"card__wrapper card__stack\"\n                      draggable={true}\n                      onDragStart={(e) => {\n                        console.log(\"drag\");\n                        dragStart(e, card, deck, game, setgame);\n                      }}\n                      onDrag={(e) => {\n                        drag(e, card, game, setgame);\n                      }}\n                      onDragEnter={(e) => {\n                        if (card.isDown == false) {\n                          dragEnter(e, game, setgame, card, deck);\n                        }\n                      }}\n                      onDragEnd={(e) => {\n                        drop(e, card, game, setgame);\n                      }}\n                      onClick={(e) => {\n                        console.log(\"select\");\n                        selectCard(card, deck, null, game, setgame);\n                      }}\n                    >\n                      <Card\n                        key={card.rank + \" \" + card.suit + \" \" + card.deck}\n                        card={card}\n                        isSelected={card.isSelected}\n                        isDown={card.isDown}\n                        isHighlighted={card.isHighlighted}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </React.Fragment>\n        ))}\n      {cards.hasOwnProperty(\"decks\") && game.decks[10].length > 0 && (\n        <div\n          onClick={(e) => {\n            distributeRemCards(game, setgame);\n          }}\n          className=\"card card__down card__remcards\"\n        ></div>\n      )}\n    </div>\n  );\n}\n\nexport default OneSuite;\n","import * as _ from \"lodash\";\nimport cardInfo from \"../utils/cardInfo\";\n\n// Function to generate card decks\nexport const populateOneSuitCards = () => {\n  let cards = [],\n    decks;\n  cardInfo[\"rank\"].forEach((rank) => {\n    for (let i = 1; i <= 8; i++) {\n      cards.push({\n        rank: rank,\n        suit: \"spade\",\n        isDown: true,\n        deck: i,\n        isSelected: false,\n        isHighlighted: false,\n      });\n    }\n  });\n  let shuffledCards = _.shuffle(cards);\n  decks = _.chunk(shuffledCards.slice(0, 50), 5);\n  decks[10] = shuffledCards.slice(50);\n  for (let i = 0; i <= 9; i++) {\n    decks[i][decks[i].length - 1].isDown = false;\n  }\n  return {\n    decks: decks,\n    cards: shuffledCards,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./FourSuite.css\";\nimport { populateFourSuitCards } from \"../../../logic/four-suite\";\nimport {\n  dragStart,\n  drag,\n  dragEnter,\n  selectCard,\n  drop,\n  distributeRemCards,\n} from \"../../../logic/shared\";\nimport CardHolder from \"../../CardHolder\";\nimport Card from \"../../Card\";\nfunction FourSuite() {\n  const [cards, setcards] = useState({});\n  const [game, setgame] = useState({\n    cards: [],\n    decks: [],\n    selectedCard: \"\",\n    selectedDeck: \"\",\n    selected: [],\n    hands: 0,\n    x: -1,\n    y: -1,\n    highlightedDeck: \"\",\n    highlightedCard: \"\",\n    dealtCards: [],\n  });\n  useEffect(() => {\n    const val = populateFourSuitCards();\n    setcards(val);\n    setgame((prevState) => ({\n      ...prevState,\n      cards: val.cards,\n      decks: val.decks,\n    }));\n  }, []);\n\n  return (\n    <div className=\"foursuite\">\n      {cards.hasOwnProperty(\"decks\") &&\n        game.decks.slice(0, 10).map((deck, index) => (\n          <React.Fragment>\n            {deck.length == 0 ? (\n              <div\n                id=\"holder\"\n                key={index + \"0\"}\n                onClick={() => {\n                  selectCard(\"\", deck, true, game, setgame);\n                }}\n                onDragEnter={(e) => {\n                  dragEnter(e, game, setgame, \"\", deck);\n                }}\n              >\n                <CardHolder key={index + \" 1\"} deck={deck} />\n              </div>\n            ) : (\n              <div>\n                <div key={index + \" 2\"} deck={deck}>\n                  {deck.map((card, key) => (\n                    <div\n                      id={card.rank + \" \" + card.suit + \" \" + card.deck}\n                      className=\"card__wrapper card__stack\"\n                      draggable={true}\n                      onDragStart={(e) => {\n                        dragStart(e, card, deck, game, setgame);\n                      }}\n                      onDrag={(e) => {\n                        drag(e, card, game, setgame);\n                      }}\n                      onDragEnter={(e) => {\n                        if (card.isDown == false) {\n                          dragEnter(e, game, setgame, card, deck);\n                        }\n                      }}\n                      onDragEnd={(e) => {\n                        drop(e, card, game, setgame);\n                      }}\n                    >\n                      <Card\n                        key={card.rank + \" \" + card.suit + \" \" + card.deck}\n                        card={card}\n                        isSelected={card.isSelected}\n                        isDown={card.isDown}\n                        isHighlighted={card.isHighlighted}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </React.Fragment>\n        ))}\n      {cards.hasOwnProperty(\"decks\") && game.decks[10].length > 0 && (\n        <div\n          onClick={(e) => {\n            distributeRemCards(game, setgame);\n          }}\n          className=\"card card__down card__remcards\"\n        ></div>\n      )}\n    </div>\n  );\n}\n\nexport default FourSuite;\n","import cardInfo from \"../utils/cardInfo\";\nimport * as _ from \"lodash\";\n\n// Function to generate card decks\nexport const populateFourSuitCards = () => {\n  let cards = [],\n    decks;\n  cardInfo[\"rank\"].forEach((rank) => {\n    cardInfo[\"suit\"].forEach((suit) => {\n      for (let i = 1; i <= 2; i++) {\n        cards.push({ rank: rank, suit: suit, isDown: true, deck: i });\n      }\n    });\n  });\n\n  let shuffledCards = _.shuffle(cards);\n  decks = _.chunk(shuffledCards.slice(0, 50), 5);\n  decks[10] = shuffledCards.slice(50);\n  for (let i = 0; i <= 9; i++) {\n    decks[i][decks[i].length - 1].isDown = false;\n  }\n  return {\n    cards: cards,\n    decks: decks,\n  };\n};\n","import React from \"react\";\n\nfunction NotFound() {\n  return <div>No page found , go to home page </div>;\n}\n\nexport default NotFound;\n","import \"./App.css\";\nimport {\n  OneSuite,\n  FourSuite,\n  Home,\n  Klondike,\n  NotFound,\n} from \"./components/pages\";\nimport * as ROUTES from \"./utils/routes\";\n\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Home exact path={ROUTES.HOME}></Home>\n          <Klondike path={ROUTES.KLONDIKE}></Klondike>\n          <OneSuite path={ROUTES.ONESUITE}></OneSuite>\n          <FourSuite path={ROUTES.FOURSUITE}></FourSuite>\n          <NotFound path=\"/\"></NotFound>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","export const HOME = \"/\";\nexport const ONESUITE = \"/one-suite\";\nexport const FOURSUITE = \"/four-suite\";\nexport const KLONDIKE = \"/klondike\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}